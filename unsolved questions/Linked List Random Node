class Solution {
   public:
   Solution(ListNode* head) {
    h = head;
  }

/** Returns a random node's value. */
   int getRandom() {
    int rd = 1;
    ListNode* tmp = h;
    ListNode* res = NULL;
    while(tmp){
        if(rand()%rd==0)
            res = tmp;
            tmp = tmp->next;
            rd++;
    }
    return res->val;
}
private:
ListNode* h;
};
//生成循环链表
class Solution {
public:
    ListNode* head_;
    ListNode* cur_;
    int len = 1;
    Solution(ListNode* head) {
        head_ = head;
        cur_ = head;
        while (cur_->next) {
            len++;
            cur_ = cur_->next;
        }
        cur_->next = head_;
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        int step = rand() % len;
        while (step--) {
            cur_ = cur_->next;
        }
        return cur_->val;
    }
};
